let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
let reminderSound;

// –ª–æ–≥–∏–Ω –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –∫–ª–∞—Å—Å—É –Ω–∞ body ‚Äî auth.js –µ–≥–æ —Å—Ç–∞–≤–∏—Ç
function isLoggedIn() {
  return document.body.classList.contains('logged-in');
}

// === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ ===
function addTask() {
  if (!isLoggedIn()) { alert('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ.'); return; }

  const title = document.getElementById('taskTitle').value;
  const deadline = document.getElementById('taskDeadline').value;
  const assignedTo = document.getElementById('assignedTo').value;

  if (!title || !deadline || !assignedTo) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }

  const task = {
    id: Date.now(),
    title,
    deadline,
    assignedTo,
    createdAt: new Date().toLocaleString("ru-RU"),
    status: '–Ω–æ–≤–∞—è'
  };

  tasks.unshift(task);
  localStorage.setItem('tasks', JSON.stringify(tasks));
  renderTasks();

  // –æ—á–∏—Å—Ç–∫–∞
  document.getElementById('taskTitle').value = '';
  document.getElementById('taskDeadline').value = '';
}

// === –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ ===
function renderTasks(filter = "–≤—Å–µ") {
  const list = document.getElementById('taskList');
  list.innerHTML = '';
  const now = new Date();

  tasks
    .filter(task => {
      if (filter === "–≤—Å–µ") return true;
      if (filter === "–∞–∫—Ç–∏–≤–Ω—ã–µ") return task.status !== "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞" && new Date(task.deadline) >= now;
      if (filter === "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ") return task.status !== "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞" && new Date(task.deadline) < now;
      return task.status === filter;
    })
    .forEach(task => {
      const taskCard = document.createElement('div');
      taskCard.className = 'task-card';
      taskCard.innerHTML = `
        <strong>${task.title}</strong><br>
        üìå –°–æ–∑–¥–∞–Ω–æ: ${task.createdAt}<br>
        ‚è≥ –î–µ–¥–ª–∞–π–Ω: ${new Date(task.deadline).toLocaleString("ru-RU")}<br>
        üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: ${task.assignedTo}<br>
        –°—Ç–∞—Ç—É—Å:
        <select onchange="changeStatus(${task.id}, this.value)">
          <option ${task.status === '–Ω–æ–≤–∞—è' ? 'selected' : ''}>–Ω–æ–≤–∞—è</option>
          <option ${task.status === '–≤ —Ä–∞–±–æ—Ç–µ' ? 'selected' : ''}>–≤ —Ä–∞–±–æ—Ç–µ</option>
          <option ${task.status === '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞' ? 'selected' : ''}>–≤—ã–ø–æ–ª–Ω–µ–Ω–∞</option>
        </select>
        <button onclick="deleteTask(${task.id})">–£–¥–∞–ª–∏—Ç—å</button>
      `;
      if (new Date(task.deadline) < now && task.status !== '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞') {
        taskCard.classList.add('overdue');
      }
      list.appendChild(taskCard);
    });
}

// === –°–º–µ–Ω–∞ —Å—Ç–∞—Ç—É—Å–∞ ===
function changeStatus(id, newStatus) {
  tasks = tasks.map(task => task.id === id ? { ...task, status: newStatus } : task);
  localStorage.setItem('tasks', JSON.stringify(tasks));
  renderTasks();
}

// === –£–¥–∞–ª–µ–Ω–∏–µ ===
function deleteTask(id) {
  tasks = tasks.filter(task => task.id !== id);
  localStorage.setItem('tasks', JSON.stringify(tasks));
  renderTasks();
}

// === –§–∏–ª—å—Ç—Ä ===
function filterTasks() {
  const filter = document.getElementById("statusFilter").value;
  renderTasks(filter);
}

// === –ú–æ–¥–∞–ª–∫–∞ ===
function openModal() {
  if (!isLoggedIn()) { alert('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ.'); return; }
  document.getElementById("taskModal").style.display = "flex";
}
function closeModal() {
  document.getElementById("taskModal").style.display = "none";
}

// === –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤ ===
function checkDeadlines() {
  if (!isLoggedIn()) return;
  const now = new Date();
  tasks.forEach(task => {
    const deadline = new Date(task.deadline);
    const diffMs = deadline - now;

    if (task.status !== "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞") {
      if (diffMs > 0 && diffMs < 300000) {
        reminderSound.play().catch(()=>{});
      }
      if (diffMs <= 0) {
        alert(`‚è∞ –ó–∞–¥–∞—á–∞ "${task.title}" –¥–æ—Å—Ç–∏–≥–ª–∞ –¥–µ–¥–ª–∞–π–Ω–∞!`);
      }
    }
  });
}

// === –¢–µ—Å—Ç –∑–≤—É–∫–∞ –≤—Ä—É—á–Ω—É—é ===
function testSound() {
  if (!isLoggedIn()) { alert('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ.'); return; }
  reminderSound.play().catch(err => console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", err));
}

// === –°—Ç–∞—Ä—Ç ===
document.addEventListener("DOMContentLoaded", () => {
  reminderSound = new Audio("sound/mixkit-wrong-answer-fail-notification-946.mp3");
  reminderSound.volume = 1.0;

  // –∫–ª–∞—Å—Å—ã logged-in / logged-out —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è auth.js
  renderTasks();
  checkDeadlines();
});

// === –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–º–µ–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Å–æ–±—ã—Ç–∏–µ —à–ª—ë—Ç auth.js) ===
window.addEventListener('auth-changed', () => {
  renderTasks();
});

// === –¢–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–∫–∞–∂–¥—ã–µ 30 —Å–µ–∫) ===
setInterval(() => {
  renderTasks();
  checkDeadlines();
}, 30000);
