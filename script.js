// –•—Ä–∞–Ω–∏–º –∑–∞–¥–∞—á–∏ –≤ localStorage
let tasks = JSON.parse(localStorage.getItem('tasks')) || [];

// –ó–≤—É–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞ –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–∞)
let reminderSound;

// –ö–æ—Ä–æ—Ç–∫–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
function save() {
  localStorage.setItem('tasks', JSON.stringify(tasks));
}

// –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –∏–∑ —Ñ–æ—Ä–º—ã
function addTask() {
  const title = document.getElementById('taskTitle').value.trim();
  const deadline = document.getElementById('taskDeadline').value;
  const assignedTo = document.getElementById('assignedTo').value.trim();

  if (!title || !deadline || !assignedTo) {
    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    return;
  }

  const task = {
    id: Date.now(),
    title,
    deadline,                           // ISO-—Å—Ç—Ä–æ–∫–∞ –∏–∑ input[type=datetime-local]
    assignedTo,
    createdAt: new Date().toLocaleString('ru-RU'),
    status: '–Ω–æ–≤–∞—è'
  };

  tasks.unshift(task);
  save();
  renderTasks();

  // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π
  document.getElementById('taskTitle').value = '';
  document.getElementById('taskDeadline').value = '';
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ (—Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É)
function renderTasks(filter = '–≤—Å–µ') {
  const list = document.getElementById('taskList');
  const now = new Date();
  list.innerHTML = '';

  tasks
    .filter(t => {
      if (filter === '–≤—Å–µ') return true;
      if (filter === '–∞–∫—Ç–∏–≤–Ω—ã–µ') return t.status !== '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞' && new Date(t.deadline) >= now;
      if (filter === '–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ') return t.status !== '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞' && new Date(t.deadline) < now;
      return t.status === filter;
    })
    .forEach(t => {
      const card = document.createElement('div');
      card.className = 'task-card';
      card.innerHTML = `
        <strong>${t.title}</strong><br>
        üìå –°–æ–∑–¥–∞–Ω–æ: ${t.createdAt}<br>
        ‚è≥ –î–µ–¥–ª–∞–π–Ω: ${new Date(t.deadline).toLocaleString('ru-RU')}<br>
        üë§ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π: ${t.assignedTo}<br>
        –°—Ç–∞—Ç—É—Å:
        <select onchange="changeStatus(${t.id}, this.value)">
          <option ${t.status === '–Ω–æ–≤–∞—è' ? 'selected' : ''}>–Ω–æ–≤–∞—è</option>
          <option ${t.status === '–≤ —Ä–∞–±–æ—Ç–µ' ? 'selected' : ''}>–≤ —Ä–∞–±–æ—Ç–µ</option>
          <option ${t.status === '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞' ? 'selected' : ''}>–≤—ã–ø–æ–ª–Ω–µ–Ω–∞</option>
        </select>
        <button onclick="deleteTask(${t.id})">–£–¥–∞–ª–∏—Ç—å</button>
      `;

      // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–∫–∏
      if (new Date(t.deadline) < now && t.status !== '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞') {
        card.classList.add('overdue');
      }

      list.appendChild(card);
    });
}

// –°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
function changeStatus(id, status) {
  tasks = tasks.map(t => (t.id === id ? { ...t, status } : t));
  save();
  renderTasks();
}

// –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
function deleteTask(id) {
  tasks = tasks.filter(t => t.id !== id);
  save();
  renderTasks();
}

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä –∏–∑ select
function filterTasks() {
  const value = document.getElementById('statusFilter').value;
  renderTasks(value);
}

// –û—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
function openModal()  { document.getElementById('taskModal').style.display = 'flex'; }
function closeModal() { document.getElementById('taskModal').style.display = 'none'; }

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–æ–≤: –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ 5 –º–∏–Ω—É—Ç –∏ –∞–ª–µ—Ä—Ç –≤ –º–æ–º–µ–Ω—Ç –¥–µ–¥–ª–∞–π–Ω–∞
function checkDeadlines() {
  const now = new Date();

  tasks.forEach(t => {
    if (t.status === '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞') return;

    const dl = new Date(t.deadline);
    const diff = dl - now;

    // –ó–∞ 5 –º–∏–Ω—É—Ç –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—É–∫
    if (diff > 0 && diff < 5 * 60 * 1000 && reminderSound) {
      reminderSound.play().catch(() => {});
    }

    // –í –º–æ–º–µ–Ω—Ç –¥–µ–¥–ª–∞–π–Ω–∞ ‚Äî –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (diff <= 0) {
      alert(`‚è∞ –ó–∞–¥–∞—á–∞ "${t.title}" –¥–æ—Å—Ç–∏–≥–ª–∞ –¥–µ–¥–ª–∞–π–Ω–∞!`);
    }
  });
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–≤—É–∫–∞ –≤—Ä—É—á–Ω—É—é (–ø–æ –∫–Ω–æ–ø–∫–µ)
function testSound() {
  reminderSound?.play().catch(err => console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', err));
}

// –ì–æ—Ç–æ–≤–∏–º –≤—Å—ë –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–≤—É–∫ (–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞)
  reminderSound = new Audio('sound/mixkit-wrong-answer-fail-notification-946.mp3');
  reminderSound.volume = 1.0;

  renderTasks();
  checkDeadlines();
});

// –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –∞—É–¥–∏–æ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
document.body.addEventListener('click', () => {
  reminderSound.play().then(() => {
    reminderSound.pause();
    reminderSound.currentTime = 0;
  }).catch(() => {});
}, { once: true });

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
setInterval(() => {
  renderTasks();
  checkDeadlines();
}, 30000);
// ====== –ú–û–î–ê–õ–ö–ê (–Ω–∞–¥—ë–∂–Ω–æ) ======
function openModal() {
  if (!requireAuth()) return;
  const m = document.getElementById('taskModal');
  if (m) { m.classList.add('show'); m.style.display = 'flex'; }
}
function closeModal() {
  const m = document.getElementById('taskModal');
  if (m) { m.classList.remove('show'); m.style.display = 'none'; }
}

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–ª–∏–∫–∏ —á–µ—Ä–µ–∑ JS (—á—Ç–æ–±—ã –Ω–µ –∑–∞–≤–∏—Å–µ—Ç—å –æ—Ç inline-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤)
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('fabAdd')?.addEventListener('click', openModal);

  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å/–û—Ç–º–µ–Ω–∞ –≤ –º–æ–¥–∞–ª–∫–µ ‚Äî –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ (—Ä–∞–±–æ—Ç–∞—é—Ç –æ–±–∞):
  document.getElementById('btnSave')?.addEventListener('click', () => { 
    addTask(); 
    closeModal(); 
  });
  document.getElementById('btnCancel')?.addEventListener('click', closeModal);
});

// ====== –°–î–ï–õ–ê–¢–¨ –§–£–ù–ö–¶–ò–ò –í–ò–î–ò–ú–´–ú–ò –î–õ–Ø HTML (–µ—Å–ª–∏ –≥–¥–µ-—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å onclick="...") ======
window.openModal    = openModal;
window.closeModal   = closeModal;
window.addTask      = addTask;
window.deleteTask   = deleteTask;
window.changeStatus = changeStatus;
window.filterTasks  = filterTasks;
window.testSound    = testSound;
