// auth.js — инициализация Firebase + логин/логаут + статус // Подключать как <script type="module" src="auth.js?v=6"></script> import { initializeApp } from "https://www.gstatic.com/firebasejs/10.13.0/firebase-app.js"; import { getAuth, setPersistence, browserLocalPersistence, signInWithEmailAndPassword, signOut, onAuthStateChanged, } from "https://www.gstatic.com/firebasejs/10.13.0/firebase-auth.js"; // ⚠️ Конфиг КОПИРУЕМ ИЗ Firebase → Project settings → Your apps → Web app → Config const firebaseConfig = { apiKey: "AIzaSyDh2g8c-3QTetKH6zV60o2PS4t8ctZLXow", authDomain: "sinergia-web-napominalka.firebaseapp.com", projectId: "sinergia-web-napominalka", storageBucket: "sinergia-web-napominalka.appspot.com", // исправлено: .appspot.com messagingSenderId: "803232203697", appId: "1:803232203697:web:f41252ac125e8727e67390", }; // --- init --- console.log("[auth] init start"); const app = initializeApp(firebaseConfig); const auth = getAuth(app); console.log("[auth] firebase init ok"); // сохраняем сессию между перезагрузками try { await setPersistence(auth, browserLocalPersistence); console.log("[auth] persistence: localStorage"); } catch (e) { console.error("[auth] setPersistence error:", e); } // --- DOM --- const emailEl = document.getElementById("email"); const passEl = document.getElementById("password"); const statusEl = document.getElementById("status"); // <p id="status">Не авторизован</p> const btnLogin = document.getElementById("btnLogin"); const btnLogout= document.getElementById("btnLogout"); if (!emailEl || !passEl || !statusEl || !btnLogin || !btnLogout) { console.warn("[auth] проверь id в HTML: #email #password #status #btnLogin #btnLogout"); } // --- handlers --- btnLogin?.addEventListener("click", async (e) => { e.preventDefault(); try { console.log("[auth] login click"); await signInWithEmailAndPassword(auth, (emailEl?.value || "").trim(), passEl?.value || ""); // alert не нужен — UI переключит script.js; но если хочешь, раскомментируй: // alert("Вход выполнен"); } catch (err) { console.error("[auth] login error:", err); alert(Ошибка: ${err.code}\n${err.message}); } }); btnLogout?.addEventListener("click", async (e) => { e.preventDefault(); try { console.log("[auth] logout click"); await signOut(auth); // alert("Вы вышли"); } catch (err) { console.error("[auth] logout error:", err); alert(Ошибка выхода: ${err.code}); } }); // --- auth state (только ставим текст статуса; скрытие/показ блоков делает script.js) --- onAuthStateChanged(auth, (user) => { if (statusEl) { statusEl.textContent = user ? Авторизован: ${user.email} : "Не авторизован"; } console.log("[auth] state:", user ? user.email : "no user"); });
